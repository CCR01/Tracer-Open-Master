

//////////////////////////////////////////////////////////////////////

template <class Type>
Parameter<Type>::Parameter()
{
  ;
}


//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
Parameter<Type>::Parameter(const Type a) : mValue(a)
{
  ;
}

//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
void Parameter<Type>::swap(Parameter<Type>& para2)
{
  std::swap(mValue, para2.mValue);
  std::swap(mMin, para2.mMin);
  std::swap(mMax, para2.mMax);
  std::swap(mStdDev, para2.mStdDev);
  std::swap(mModifier, para2.mModifier);
}

//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
void Parameter<Type>::set(const Type a)
{
  mValue = a;
}

//////////////////////////////////////////////////////////////////////
/// \return  current Value 
//////////////////////////////////////////////////////////////////////

template <class Type>
Type Parameter<Type>::getValue() const
{
  return mValue;
}


//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
void Parameter<Type>::setMinimum(const Type a)
{
  mMin = a;
}

//////////////////////////////////////////////////////////////////////
/// \return  current Value 
//////////////////////////////////////////////////////////////////////

template <class Type>
Type Parameter<Type>::getMinimum() const
{
  return mMin;
}


//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
void Parameter<Type>::setMaximum(const Type a)
{
  mMax = a;
}

//////////////////////////////////////////////////////////////////////
/// \return  current Value 
//////////////////////////////////////////////////////////////////////

template <class Type>
Type Parameter<Type>::getMaximum() const
{
  return mMax;
}


//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
void Parameter<Type>::setStdDev(const Type a)
{
  mStdDev = a;
}

//////////////////////////////////////////////////////////////////////
/// \return  current Value 
//////////////////////////////////////////////////////////////////////

template <class Type>
Type Parameter<Type>::getStdDev() const
{
  return mStdDev;
}



//////////////////////////////////////////////////////////////////////
/// \param a Value to be set
//////////////////////////////////////////////////////////////////////
template <class Type>
void Parameter<Type>::setModifier(const typeModifier a)
{
  mModifier = a;
}

//////////////////////////////////////////////////////////////////////
/// \return  current Value 
//////////////////////////////////////////////////////////////////////

template <class Type>
typeModifier Parameter<Type>::getModifier() const
{
  return mModifier;
}


//////////////////////////////////////////////////////////////////////
